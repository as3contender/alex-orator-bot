#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import streamlit as st
from typing import Dict, List, Any, Optional

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
ROLE_PERMISSIONS = {
    "super_admin": {
        "name": "üëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        "can_view": True,
        "can_edit": True,
        "can_delete": True,
        "can_create": True,
        "can_manage_users": True,
        "can_manage_content": True,
        "can_access_admin_panel": True,
        "can_manage_roles": True
    },
    "admin": {
        "name": "üë®üèª‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        "can_view": True,
        "can_edit": True,
        "can_delete": True,
        "can_create": True,
        "can_manage_users": True,
        "can_manage_content": True,
        "can_access_admin_panel": True,
        "can_manage_roles": False
    },
    "moderator": {
        "name": "üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
        "can_view": True,
        "can_edit": True,
        "can_delete": False,  # –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å
        "can_create": True,
        "can_manage_users": False,  # –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        "can_manage_content": True,
        "can_access_admin_panel": True,
        "can_manage_roles": False
    },
    "user": {
        "name": "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "can_view": True,
        "can_edit": False,
        "can_delete": False,
        "can_create": False,
        "can_manage_users": False,
        "can_manage_content": False,
        "can_access_admin_panel": False,  # –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        "can_manage_roles": False
    }
}

def get_user_permissions(user_role: str) -> Dict[str, Any]:
    """
    –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (super_admin, admin, moderator, user)
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
    """
    return ROLE_PERMISSIONS.get(user_role, ROLE_PERMISSIONS["user"])

def check_permission(user_role: str, permission: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        permission: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        True –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–æ, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    permissions = get_user_permissions(user_role)
    return permissions.get(permission, False)

def require_permission(permission: str):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏
    
    Args:
        permission: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    """
    def decorator(func):
        def wrapper(*args, **kwargs):
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ session_state
            user_role = st.session_state.get("user_role", "user")
            
            if check_permission(user_role, permission):
                return func(*args, **kwargs)
            else:
                st.error("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è")
                st.info(f"üí° –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏: {permission}")
                return None
        return wrapper
    return decorator

def show_access_denied(message: str = "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –≤ –¥–æ—Å—Ç—É–ø–µ
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    """
    st.error(f"‚ùå {message}")
    st.info("üí° –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–≤")

def can_access_page(user_role: str, page_type: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –¥–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        page_type: –¢–∏–ø —Å—Ç—Ä–∞–Ω–∏—Ü—ã (admin, moderator, user)
        
    Returns:
        True –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω, False –µ—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω
    """
    if page_type == "admin":
        return user_role in ["super_admin", "admin"]
    elif page_type == "moderator":
        return user_role in ["super_admin", "admin", "moderator"]
    elif page_type == "user":
        return True  # –í—Å–µ —Ä–æ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å
    else:
        return False

def get_accessible_pages(user_role: str) -> List[str]:
    """
    –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    """
    permissions = get_user_permissions(user_role)
    
    accessible_pages = []
    
    if permissions["can_manage_users"]:
        accessible_pages.append("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    
    if permissions["can_manage_content"]:
        accessible_pages.append("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
    
    # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º
    accessible_pages.append("üë§ –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    return accessible_pages

def show_user_permissions_info(user_role: str):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    permissions = get_user_permissions(user_role)
    
    st.subheader(f"üîí –í–∞—à–∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: {permissions['name']}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∞–≤
    col1, col2 = st.columns(2)
    
    with col1:
        st.write("**‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**")
        if permissions["can_view"]:
            st.write("‚Ä¢ üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
        if permissions["can_edit"]:
            st.write("‚Ä¢ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
        if permissions["can_create"]:
            st.write("‚Ä¢ ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π")
        if permissions["can_manage_users"]:
            st.write("‚Ä¢ üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        if permissions["can_manage_content"]:
            st.write("‚Ä¢ üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
        if permissions["can_access_admin_panel"]:
            st.write("‚Ä¢ üè† –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
        if permissions["can_manage_roles"]:
            st.write("‚Ä¢ üëë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏")
    
    with col2:
        st.write("**‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**")
        if not permissions["can_delete"]:
            st.write("‚Ä¢ üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
        if not permissions["can_edit"]:
            st.write("‚Ä¢ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
        if not permissions["can_create"]:
            st.write("‚Ä¢ ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π")
        if not permissions["can_manage_users"]:
            st.write("‚Ä¢ üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        if not permissions["can_manage_content"]:
            st.write("‚Ä¢ üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
        if not permissions["can_access_admin_panel"]:
            st.write("‚Ä¢ üè† –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")

def create_role_based_ui(user_role: str, section_name: str, 
                         view_component, edit_component=None, 
                         delete_component=None, create_component=None):
    """
    –°–æ–∑–¥–∞—Ç—å UI –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        section_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
        view_component: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        edit_component: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        delete_component: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        create_component: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    permissions = get_user_permissions(user_role)
    
    st.subheader(f"üìã {section_name}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    if permissions["can_view"]:
        view_component()
    else:
        show_access_denied(f"–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ '{section_name}'")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if edit_component and permissions["can_edit"]:
        st.write("---")
        st.write("**‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:**")
        edit_component()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è
    if create_component and permissions["can_create"]:
        st.write("---")
        st.write("**‚ûï –°–æ–∑–¥–∞–Ω–∏–µ:**")
        create_component()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É–¥–∞–ª–µ–Ω–∏—è
    if delete_component and permissions["can_delete"]:
        st.write("---")
        st.write("**üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ:**")
        delete_component()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö
    if not any([permissions["can_edit"], permissions["can_create"], permissions["can_delete"]]):
        st.info("‚ÑπÔ∏è –£ –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")

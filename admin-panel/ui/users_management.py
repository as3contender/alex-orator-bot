#!/usr/bin/env python3

import streamlit as st
import pandas as pd
from database.database import get_db
from datetime import datetime
import uuid
from security.access_control import get_user_permissions, check_permission, show_access_denied


def users_management_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    st.header("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    user_role = st.session_state.get("user_role", "user")
    permissions = get_user_permissions(user_role)
    
    if not permissions["can_manage_users"]:
        show_access_denied("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        st.info("üí° –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    st.info(f"üîí –í–∞—à–∞ —Ä–æ–ª—å: {permissions['name']}")
    
    # –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = get_db()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if not db.conn:
        st.warning("‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        try:
            db.connect()
            st.success("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        except Exception as e:
            st.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            st.info("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
            return
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.subheader("üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ë–î")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            users = db.get_all_users()
            
            if users:
                # –°–æ–∑–¥–∞–µ–º DataFrame –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                df_data = []
                for user in users:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è –∏–∑ first_name –∏ last_name
                    first_name = user.get('first_name', '')
                    last_name = user.get('last_name', '')
                    full_name = f"{first_name} {last_name}".strip() if first_name or last_name else 'N/A'
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    user_role = user.get('role', 'user')
                    role_display = {
                        'user': 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                        'admin': 'üë®üèª‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                        'moderator': 'üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä',
                        'super_admin': 'üëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
                    }.get(user_role, f'‚ùì {user_role}')
                    
                    df_data.append({
                        "ID": user.get('id', ''),
                        "telegram_id": user.get('telegram_id', ''),
                        "username": user.get('username', 'N/A'),
                        "email": user.get('email'),
                        "full_name": full_name,
                        "–†–æ–ª—å": role_display,
                        "is_active": user.get('is_active', False),
                        "created_at": user.get('created_at', 'N/A'),
                        "updated_at": user.get('updated_at', 'N/A')
                    })
                
                # –°–æ–∑–¥–∞–µ–º DataFrame
                df = pd.DataFrame(df_data)
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
                st.dataframe(df, use_container_width=True)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                st.info(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
                
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º
                role_counts = {}
                for user in users:
                    role = user.get('role', 'user')
                    role_counts[role] = role_counts.get(role, 0) + 1
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–æ–ª—è–º
                st.subheader("üé≠ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–æ–ª—è–º")
                role_cols = st.columns(len(role_counts))
                
                for i, (role, count) in enumerate(role_counts.items()):
                    with role_cols[i]:
                        role_icon = {
                            'user': 'üë§',
                            'admin': 'üë®üèª‚Äçüíº',
                            'moderator': 'üõ°Ô∏è',
                            'super_admin': 'üëë'
                        }.get(role, '‚ùì')
                        
                        role_name = {
                            'user': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
                            'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
                            'moderator': '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã',
                            'super_admin': '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã'
                        }.get(role, role.capitalize())
                        
                        st.metric(f"{role_icon} {role_name}", count)
                
                # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", key="refresh_users"):
                    st.rerun()
                
                # –†–∞–∑–¥–µ–ª —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
                if permissions["can_delete"]:
                    st.subheader("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    st.warning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!")
                    
                    # –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
                    user_options = []
                    for user in users:
                        username = user.get('username', 'N/A') or '–ë–µ–∑ username'
                        user_id = user.get('id', '')
                        user_options.append((user_id, f"{username} (ID: {user_id[:8]}...)"))
                    
                    if user_options:
                        selected_user_id = st.selectbox(
                            "üë§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
                            options=[opt[0] for opt in user_options],
                            format_func=lambda x: next(opt[1] for opt in user_options if opt[0] == x),
                            key="delete_user_select"
                        )
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                        selected_user = next(user for user in users if user.get('id') == selected_user_id)
                        if selected_user:
                            username = selected_user.get('username', 'N/A') or '–ë–µ–∑ username'
                            telegram_id = selected_user.get('telegram_id', 'N/A')
                            full_name = f"{selected_user.get('first_name', '')} {selected_user.get('last_name', '')}".strip()
                            
                            # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", key="delete_selected_user", type="primary"):
                                if db.delete_user(selected_user_id):
                                    st.success(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
                                    st.rerun()
                                else:
                                    st.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}")
                    else:
                        st.info("üìù –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                else:
                    st.info("‚ÑπÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
                    
            else:
                st.info("üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    with col2:
        st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        
        with st.form("add_user_form"):
            # –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            username = st.text_input("üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*", key="new_username")
            password = st.text_input("üîí –ü–∞—Ä–æ–ª—å*", type="password", key="new_password")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            role_display = st.selectbox(
                "üë• –†–æ–ª—å",
                options=["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"],
                index=0,
                key="new_role"
            )
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—É—é —Ä–æ–ª—å –≤ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ë–î
            role_mapping = {
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å": "user",
                "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä": "admin", 
                "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä": "moderator"
            }
            role = role_mapping[role_display]
            
            full_name = st.text_input("üë§ –ü–æ–ª–Ω–æ–µ –∏–º—è", key="new_full_name")
            email = st.text_input("üìß Email", key="new_email")
            telegram_id = st.text_input("üì± Telegram ID", key="new_telegram_id")
            
            # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            if st.form_submit_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", use_container_width=True):
                if username and password:
                    try:
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                        st.info(f"üîç –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é: {role_display} ({role})")
                        
                        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        success = db.create_user(
                            username=username,
                            password=password,
                            role=role,  # –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ä–æ–ª—å
                            full_name=full_name if full_name else None,
                            email=email if email else None,
                            telegram_id=telegram_id if telegram_id else None
                        )
                        
                        if success:
                            st.success(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —Å —Ä–æ–ª—å—é '{role_display}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
                            st.rerun()
                        else:
                            st.error("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                            st.info("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –æ—à–∏–±–∫–∏")
                    except Exception as e:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                        st.info("üí° –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ª–æ–≥–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞")
                else:
                    st.error("‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å)")


if __name__ == "__main__":
    users_management_page()

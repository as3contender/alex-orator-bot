.PHONY: help local-up local-down logs test clean build production-up production-down setup

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_LOCAL = docker-compose -f docker-compose.local.yml
COMPOSE_PROD = docker-compose -f docker-compose.yml

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "CloverdashBot Template - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2}'

setup: ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CloverdashBot Template..."
	@mkdir -p logs
	@echo "üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs/"
	@if [ ! -f .env ]; then \
		echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."; \
		cp backend/env_example.txt backend/.env; \
		cp telegram-bot/env_example.txt telegram-bot/.env; \
		echo "‚úÖ –§–∞–π–ª—ã .env —Å–æ–∑–¥–∞–Ω—ã. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º."; \
	else \
		echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi
	@echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

local-up: ## –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	$(COMPOSE_LOCAL) up -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
	@echo "üìä Backend API: http://localhost:8000"
	@echo "üìö API Docs: http://localhost:8000/docs"
	@echo "üîç Health Check: http://localhost:8000/health"

local-down: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	$(COMPOSE_LOCAL) down
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

local-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	$(COMPOSE_LOCAL) restart
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!"

production-up: ## –ó–∞–ø—É—Å–∫ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "üöÄ –ó–∞–ø—É—Å–∫ production –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	$(COMPOSE_PROD) up -d
	@echo "‚úÖ Production —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"

production-down: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	$(COMPOSE_PROD) down
	@echo "‚úÖ Production —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

logs: ## –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
	@echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤..."
	$(COMPOSE_LOCAL) logs -f

logs-backend: ## –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ backend
	@echo "üìã –õ–æ–≥–∏ Backend..."
	$(COMPOSE_LOCAL) logs -f backend

logs-telegram: ## –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ telegram –±–æ—Ç–∞
	@echo "üìã –õ–æ–≥–∏ Telegram Bot..."
	$(COMPOSE_LOCAL) logs -f telegram-bot

logs-db: ## –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "üìã –õ–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	$(COMPOSE_LOCAL) logs -f app-db data-db

test: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	@cd backend && python -m pytest tests/ -v
	@cd telegram-bot && python -m pytest tests/ -v

test-backend: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ backend
	@echo "üß™ –¢–µ—Å—Ç—ã Backend..."
	@cd backend && python -m pytest tests/ -v

test-telegram: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ telegram –±–æ—Ç–∞
	@echo "üß™ –¢–µ—Å—Ç—ã Telegram Bot..."
	@cd telegram-bot && python -m pytest tests/ -v

build: ## –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
	@echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	docker build -t cloverdashbot-backend ./backend
	docker build -t cloverdashbot-telegram ./telegram-bot
	@echo "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã!"

clean: ## –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –æ–±—Ä–∞–∑–æ–≤
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	$(COMPOSE_LOCAL) down -v
	$(COMPOSE_PROD) down -v
	docker system prune -f
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

clean-data: ## –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–í–ù–ò–ú–ê–ù–ò–ï: —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!)
	@echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " confirm && [ "$$confirm" = "y" ] || exit 1
	$(COMPOSE_LOCAL) down -v
	$(COMPOSE_PROD) down -v
	docker volume prune -f
	@echo "‚úÖ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã!"

status: ## –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
	$(COMPOSE_LOCAL) ps

health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@curl -s http://localhost:8000/health/ || echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@curl -s http://localhost:8000/health/info || echo "‚ùå Backend health info –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

shell-backend: ## Shell –≤ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	@echo "üêö Shell –≤ Backend..."
	$(COMPOSE_LOCAL) exec backend /bin/bash

shell-telegram: ## Shell –≤ telegram –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	@echo "üêö Shell –≤ Telegram Bot..."
	$(COMPOSE_LOCAL) exec telegram-bot /bin/bash

shell-db: ## Shell –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	@echo "üêö Shell –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
	$(COMPOSE_LOCAL) exec app-db psql -U cloverdashbot -d app_db

install-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@cd backend && pip install -r requirements.txt
	@cd telegram-bot && pip install -r requirements.txt
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	@cd backend && black . && isort .
	@cd telegram-bot && black . && isort .
	@echo "‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω!"

lint: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	@cd backend && flake8 . && mypy .
	@cd telegram-bot && flake8 . && mypy .
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

docs: ## –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
	@echo "üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	@cd backend && pdoc --html --output-dir docs .
	@echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API
api-docs: ## –û—Ç–∫—Ä—ã—Ç—å API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "üìö –û—Ç–∫—Ä—ã—Ç–∏–µ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	@open http://localhost:8000/docs || xdg-open http://localhost:8000/docs || echo "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/docs –≤ –±—Ä–∞—É–∑–µ—Ä–µ"

api-health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∑–¥–æ—Ä–æ–≤—å—è
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∑–¥–æ—Ä–æ–≤—å—è..."
	@curl -s http://localhost:8000/health/ | jq . || curl -s http://localhost:8000/health/

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
db-backup: ## –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
	@mkdir -p backups
	$(COMPOSE_LOCAL) exec app-db pg_dump -U cloverdashbot app_db > backups/app_db_$(shell date +%Y%m%d_%H%M%S).sql
	$(COMPOSE_LOCAL) exec data-db pg_dump -U cloverdashbot data_db > backups/data_db_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ–∑–¥–∞–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backups/"

db-restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ!"
	@read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è app_db: " app_file && \
	read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è data_db: " data_file && \
	$(COMPOSE_LOCAL) exec -T app-db psql -U cloverdashbot app_db < backups/$$app_file && \
	$(COMPOSE_LOCAL) exec -T data-db psql -U cloverdashbot data_db < backups/$$data_file
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!" 